/// Given an array of 0s and 1s ,we may change up to K values from 0 to 1.Return the length of longest(contiguous) subarray that contains only 1s.
/// Idea: Find the longest subarray with at most K zeroes. For each A[j] try to find the longest subarray. If A[i]~ A[j] has zeroes<=K,we continue to increment j.Isme window ka size increase kardo.
///If A[i]~A[j] has zeroes> K, we Increment i(as well as j). ie isme window ka size decrease karte raho.ie shrink kardo.

///Pseudo Code:
/*
int zerocnt=0,i=0,ans=0;
for(int j=0;j<A.size();j++)
{
    if(A[j]==0)
        zerocnt++;
    while(zerocnt>K)
    {
        if(A[i]==0)
            zerocnt--;
        i++;    ///is cheez se hi hamari window shrink hogi.
    }
    ans=max(ans,j-i+1);
}
*/
///
///
///
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int k;
    cin>>k;
    vector<int> a(n);

    for(auto &i:a)
        cin>>i;
    ///a[i..j] this is our window. To increase window size we do  a[i..j+1]. To decrease window size we do a[i+1,j]
   ///jab j++ hoga toh window ka size badhega and jab i++ hoga tab window ka size ghatega.
    int zerocnt=0,start=0,ans=0;
    for(int end=0;end<n;end++)
    {
        if(a[end]==0)
            zerocnt++;
        while(zerocnt>k)  ///yaha pe dekh lia ki agar 0count k se bada hogya toh i ko increment kro.phele element ko bahar krdo.
        {
            if(a[start]==0)
            {
                zerocnt--;   ///agar ZeroCount>K vali condition satisfy ni hori toh window ka size kam karna padega.Toh jo element tha use window se nikal dia toh window shrink hogyi.
            }
            start++;    ///is cheez se hi hamari window shrink hogi.
        }
     ///yaha aane tak zerocnt<K ensure hora hoga.
        ans=max(ans,end-start+1); 
        ///current window size is end -start +1.
        ///j-i+1 is the current size of window which is length of current subarray comprising at most k zeroes.
    }
    cout<<ans;
}
