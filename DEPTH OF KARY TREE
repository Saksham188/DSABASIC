#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
    int data;
    vector<Node*>child;

    Node(int val)
    {
        data=val;
    }
};

int CalcDepth(Node* root)
{
    if(root==NULL)
    return 0;

    int MaxDepth=0;
    for(int i=0;i<root->child.size();i++)
    {
        MaxDepth=max(MaxDepth,CalcDepth(root->child[i]));
    }
    return MaxDepth+1;
}



void LevelOrder(Node* root)
{
    queue<Node*>q;
    q.push(root);
    while(!q.empty())
    {
        Node* temp=q.front();
        q.pop();
        cout<<temp->data<<" ";
        
        for(int i=0;i<temp->child.size();i++)
        {
            q.push(temp->child[i]);
        }

    }
}

int main()
{
    Node* root=new Node(1);
    root->child.push_back(new Node(2));
    root->child.push_back(new Node(3));
    root->child.push_back(new Node(4));
    root->child[0]->child.push_back(new Node(5));
    root->child[0]->child.push_back(new Node(6));
    root->child[1]->child.push_back(new Node(7));               
    root->child[2]->child.push_back(new Node(8));               
       
    cout<<"\nLevelOrder: ";
    LevelOrder(root);
    cout<<"\nMax depth of kary tree is: "<<CalcDepth(root);
}


