/// VeryImportant Interview Question.
/// Balanced Paranthesis : {([])}  , Unbalanced Parantheis: [{()]}
///Approach: Phele left to right inhe stack mein push kardo opening bracket ko. fir agar top mein opening ke corresponding closing aaya toh usey pop kardo.
/// Balanced Paranthesis mein Agar ye sab hojaye toh string valid string hai.
///
#include<bits/stdc++.h>
using namespace std;

bool IsValid(string s)
{
    int n=s.size();

    stack<char>st;
    bool ans=true;

    for(int i=0;i<n;i++)
    {
        if(s[i]=='{'||s[i]=='('||s[i]=='[')
            st.push(s[i]);

        else if(s[i]==')')
        {
            if(!st.empty() &&st.top()=='(')
                st.pop();
            else
            {
                ans=false;
                break;
            }
        }

        else if(s[i]=='}')
        {
            if(!st.empty() &&st.top()=='{')
                st.pop();
            else
            {
                ans=false;
                break;
            }
        }

        else if(s[i]==']')
        {
            if(!st.empty() && st.top()=='[')
                st.pop();
            else
            {
                ans=false;
                break;
            }
        }
    }
  if(!st.empty())
    return false;
  return ans;
}
int main()
{
    string s1="{([])}";
    string s2="{(([])}";

    if(IsValid(s1))
    {
        cout<<"Valid String "<<endl;
    }
    else

        cout<<"Invalid String "<<endl;

    if(IsValid(s2))
    {
        cout<<"Valid String "<<endl;
    }
    else
        cout<<"Invalid String "<<endl;
}
