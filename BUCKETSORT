///Logic: Create n empty buckets or lists.For every element arr[i] insert arr[i] into bucket[n*arr[i]] .Now sort individual buckets using insertion sort and concatenate all sorted buckets.

#include<bits/stdc++.h>
using namespace std;

void BucketSort(float arr[],int n)
{
    ///Create n empty buckets ,we will use them in sorting.
    vector<float>b[n];

    ///Put array elements in different buckets

    for(int i=0;i<n;i++)
    {
        int index=n*arr[i]; ///eg 0.08 se 10 tak toh 0.08*10=0.8 round hoke bucket 1 mein jayega.
        b[index].push_back(arr[i]);
    }

    ///Now sort the individual buckets
    for(int i=0;i<n;i++)
    {
        sort(b[i].begin(),b[i].end());
    }

    ///Concatenate all buckets into arr[]
    int ind=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<b[i].size();j++)
        {
            arr[ind++]=b[i][j];
        }
    }
}

int main()
{
   float arr[]
        = { 0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434 };
    int n = sizeof(arr) / sizeof(arr[0]);
    BucketSort(arr, n);
 
    cout << "Sorted array is \n";
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
}


